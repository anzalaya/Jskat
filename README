25/02/2010 Version 0.0
Start of project
definition of classes and relations between them
0.1 Writing/documentation done, no test, no relational tests
0.2-3 additional code
0.4 single tests passed and automatized
0.5 context testing 

19/03/2010 Version 0.4
No fatal errors (ran 1000000 times without errors on ensisun)
TODO:
1 Play to check if algorithms output the correct result
2 Establish Protocol for network interface
3 Graphical interface
4 logs
* add Ramsch
* modify code to have a class game (maybe class turn as well)

21/03/2010 Version 0.4
Server side seems finished. Only nice quit to do
bug with play:

30/03/2010 version 0.5
Version commandline seems to be working
TODO
test with 2 3 human player to see if view is working 
test bad combinaisons of modifiers
test bad card 
add exit strategy (add protocol request at end of game)
replace integer value by constants in protocol and test that all is well
finish commandline
start graphic interface

08/04/2010 version 0.6
TextGUI works better
TODO
Global-> redo init and ai window to make them part of BoardGUI
Global->total GUI with animation 
Global->redo Waiting window
TextGUI-> add result modal window, tricklist, last trick modal window
Global->test with 2 3 human player
Global->graceful exit
Global->Reoganize graphical interface code, more modular
WorkerThread->Handle exception when clients quit abruptely
Global-> Make it easy to play locally : give option quit local network to MmiInit

Network organization see Protocol.java
1 thread per board (three sockets)
1 threads receives the connected socket and wait to have enough to dispatch to boards








