25/02/2010 Version 0.0
Start of project
definition of classes and relations between them
0.1 Writing/documentation done, no test, no relational tests
0.2-3 additional code
0.4 single tests passed and automatized
0.5 context testing 

19/03/2010 Version 0.4
No fatal errors (ran 1000000 times without errors on ensisun)
TODO:
1 Play to check if algorithms output the correct result
2 Establish Protocol for network interface
3 Graphical interface
4 logs
* add Ramsch
* modify code to have a class game (maybe class turn as well)

21/03/2010 Version 0.4
Server side seems finished. Only nice quit to do

30/03/2010 version 0.5
Version commandline seems to be working
TODO
test with 2 3 human player to see if view is working 
test bad combinaisons of modifiers
test bad card 
add exit strategy (add protocol request at end of game)
replace integer value by constants in protocol and test that all is well
finish commandline
start graphic interface

08/04/2010 version 0.6
TextGUI works better

TODO
//Global-> redo init and ai window to make them part of BoardGUI
//Global-> Make it easy to play locally : give option quit and local network to MmiInit, later offer the option for command play
//TextGUI-> tricklist, last trick modal window
//Global->graceful exit

Global->redo Waiting window
Global->test with 2 3 human player
WorkerThread->Handle NoSuchElementException when client quits abruptely and warn other clients
Solve problem stats
Global->total GUI with animation 
Global->Reoganize graphical interface code, more modular, more clean, no need of panels
Protocol constants in HumanPlayer


Take a look at :
revert turn 0<=turn<=9 and think drawturnstart info
d l s thing, on turn 2
WorkerThread.java:810 why 2?







